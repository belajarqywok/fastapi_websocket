global
    daemon
    maxconn 1024
    # user haproxy
    # group haproxy
    log /log local0
    log /log local1 notice
    stats timeout 30s

    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS


defaults
    log global
    mode http
    option httplog
    option dontlognull
    retries 3
    option redispatch
    timeout http-request 10s
    timeout queue 10s
    timeout connect 10s
    timeout client 10s
    timeout server 10s
    timeout check 10s


frontend http_front
    bind *:80
    bind :::80
    mode http

    # rate limiting
    # tcp-request connection track-sc1 src table https_front
    # tcp-request connection reject if { sc_conn_rate(0) ge 50 }
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny deny_status 429 if { sc_http_req_rate(0) gt 100 }

    acl is_websocket hdr(Upgrade) -i websocket
    acl is_websocket hdr_beg(Host) -i ws

    use_backend websocket_chatting_back if is_websocket
    default_backend websocket_chatting_back

    # redirect to https
    # redirect scheme https if !{ ssl_fc }


frontend https_front
    bind *:443 ssl crt F:\command\haproxy\certificates.pem
    bind :::443 ssl crt F:\command\haproxy\certificates.pem
    mode http

    acl is_websocket hdr(Upgrade) -i websocket
    acl is_websocket hdr_beg(Host) -i ws

    # rate limiting
    # tcp-request connection track-sc1 src table https_front
    # tcp-request connection reject if { sc_conn_rate(0) ge 50 }
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny deny_status 429 if { sc_http_req_rate(0) gt 100 }

    use_backend websocket_chatting_back if is_websocket
    default_backend websocket_chatting_back


backend websocket_chatting_back
    mode http
    timeout queue 10s
    balance roundrobin
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server websocket_svc_1 192.168.137.1:8000 check
    # server websocket_svc_1 192.168.137.1:8001 check
    # server websocket_svc_1 192.168.137.1:8002 check
    # server websocket_svc_1 192.168.137.1:8003 check
    # server websocket_svc_1 192.168.137.1:8004 check


listen stats
    bind *:13579
    stats enable
    stats hide-version
    stats refresh 30s
    stats show-node
    stats auth username:password
    stats uri /stats
